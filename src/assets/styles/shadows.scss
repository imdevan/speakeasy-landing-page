$shadows: (
  text-sm: rgba($dark-gray, 0.25) 0px 4px 12px,
  sm:  0px 4px 12px rgba($dark-gray, 0.25),
  md: 0px 8px 24px rgba($dark-blue, 0.25),
  lg: 0px 16px 48px rgba($dark-blue, 0.25)
);

$shadow-sizes: (
  sm:  0px 4px 12px,
  md: 0px 8px 24px,
  lg: 0px 16px 48px
);

@function shadow($shadow: md) {
  @return map-get($shadows, $shadow);
}

@mixin filter-drop-shadow($size: md, $color: rgba($dark-blue, 0.25)) {
  $shadow-size: map-get($shadow-sizes, $size);
  filter: drop-shadow($shadow-size $color);
}


// .c-drop-shadow {
//   @each $shadow, $shadow-val in $shadow-sizes {
//     @include popMedia($shadow) {
//       @include filter-drop-shadow($shadow);
//     }
//   }
// }

// Future state
// $shadows: (
//   text-sm: 0px 4px 12px,
//   sm:  0px 4px 12px ,
//   md: 0px 8px 24px,
//   lg: 0px 16px 48px
// );
//
// @function shadow($size: md, $color: $dark-blue, $opacity: 0.25) {
//   @return map-get($shadows, $size) rgba($color, $opacity);
// }
//
.c-shadow {
  @each $shadow-size, $shadow-val in $shadow-sizes {
    &-#{$shadow-size} {
     box-shadow: shadow($shadow-size);
    }
  }
}
// .c-shadow {
//   @each $shadow-size, $shadow-val in $box-shadows {
//     @include popMedia($shadow-size) {
//       box-shadow: shadow($shadow-size);
//     }
//   }
// }
//
// .c-drop-shadow {
//   @each $shadow-size, $shadow-val in $box-shadows {
//     @include popMedia($shadow-size) {
//       filter: drop-shadow(shadow($shadow-size));
//     }
//   }
// }
